generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id            Int     @unique(map: "id_UNIQUE") @default(autoincrement())
  user_id       Int
  type          String? @db.VarChar(255)
  refresh_token String? @db.VarChar(255)
  acess_token   String? @db.VarChar(255)
  expires_at    Float?  @db.Float
  token_type    String? @db.VarChar(255)
  scope         String? @db.VarChar(255)
  id_token      String? @db.VarChar(255)
  session_state String? @db.VarChar(255)
  user          user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Account_user1")

  @@id([id, user_id])
  @@index([user_id], map: "fk_Account_user1_idx")
}

model edificio {
  id            Int         @unique(map: "id_UNIQUE") @default(autoincrement())
  designacao    String?     @db.VarChar(255)
  descricao     String?     @db.VarChar(255)
  iluminacao_id Int?
  proposta_id   String      @db.VarChar(10)
  iluminacao    iluminacao? @relation(fields: [iluminacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_edificio_iluminacao1")
  proposta      proposta    @relation(fields: [proposta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_edificio_proposta1")
  espaco        espaco[]
  foto          foto[]
  piso          piso[]

  @@id([id, proposta_id])
  @@index([iluminacao_id], map: "fk_edificio_iluminacao1_idx")
  @@index([proposta_id], map: "fk_edificio_proposta1_idx")
}

model elevadores {
  id               Int       @unique(map: "id_UNIQUE") @default(autoincrement())
  ref_elevador     String    @unique(map: "ref_elevador_UNIQUE") @db.VarChar(45)
  carga            Int
  piso_id          Int
  piso_edificio_id Int
  data_criacao     DateTime? @db.Timestamp(0)
  piso             piso      @relation(fields: [piso_id, piso_edificio_id], references: [id, edificio_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_elevadores_piso1")
  foto             foto[]

  @@id([id, piso_id, piso_edificio_id])
  @@index([piso_id, piso_edificio_id], map: "fk_elevadores_piso1_idx")
}

model envidracados {
  id                   Int               @unique(map: "id_UNIQUE") @default(autoincrement())
  quant_vao            Int
  data_criacao         DateTime?         @db.Timestamp(0)
  tipo_envidracados_id Int
  tipo_envidracados    tipo_envidracados @relation(fields: [tipo_envidracados_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_envidracados_tipo_envidracados1")
  espaco               espaco[]

  @@id([id, tipo_envidracados_id])
  @@index([tipo_envidracados_id], map: "fk_envidracados_tipo_envidracados1_idx")
}

model espaco {
  id               Int          @unique(map: "id_UNIQUE") @default(autoincrement())
  edificio_id      Int
  piso_id          Int
  numero           Int          @unique(map: "numero_UNIQUE")
  designacao       String?      @db.VarChar(255)
  pe_direito       Float        @db.Float
  climatizado      Int          @db.TinyInt
  util             Int          @db.TinyInt
  numero_ocupantes Int?
  ocupacao_id      Int
  iluminacao_id    Int
  envidracados_id  Int
  sistemas_id      Int
  envidracados     envidracados @relation(fields: [envidracados_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_espaco_envidracados1")
  iluminacao       iluminacao   @relation(fields: [iluminacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_espaco_iluminacao1")
  sistemas         sistemas     @relation(fields: [sistemas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_espaco_sistemas1")
  edificio         edificio     @relation(fields: [edificio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_espacos_edificios1")
  ocupacao         ocupacao     @relation(fields: [ocupacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_espacos_ocupacao1")
  piso             piso         @relation(fields: [piso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_espacos_pisos1")
  foto             foto[]

  @@id([id, edificio_id, piso_id, ocupacao_id, iluminacao_id, envidracados_id, sistemas_id])
  @@index([envidracados_id], map: "fk_espaco_envidracados1_idx")
  @@index([iluminacao_id], map: "fk_espaco_iluminacao1_idx")
  @@index([sistemas_id], map: "fk_espaco_sistemas1_idx")
  @@index([edificio_id], map: "fk_espacos_edificios1_idx")
  @@index([ocupacao_id], map: "fk_espacos_ocupacao1_idx")
  @@index([piso_id], map: "fk_espacos_pisos1_idx")
}

model foto {
  id                Int                 @id @unique(map: "id_UNIQUE") @default(autoincrement())
  caminhoRelativo   String?             @db.Text
  data_criacao      DateTime?           @db.Timestamp(0)
  tipo              String?             @db.VarChar(255)
  edificio_id       Int?
  elevadores_id     Int?
  espaco_id         Int?
  tipo_sistemas_id  Int?
  edificio          edificio?           @relation(fields: [edificio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_foto_edificio1")
  elevadores        elevadores?         @relation(fields: [elevadores_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_foto_elevadores1")
  espaco            espaco?             @relation(fields: [espaco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_foto_espaco1")
  tipo_sistemas     tipo_sistemas?      @relation(fields: [tipo_sistemas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_foto_tipo_sistemas1")
  luminaria         luminaria[]
  tipo_envidracados tipo_envidracados[]

  @@index([edificio_id], map: "fk_foto_edificio1_idx")
  @@index([elevadores_id], map: "fk_foto_elevadores1_idx")
  @@index([espaco_id], map: "fk_foto_espaco1_idx")
  @@index([tipo_sistemas_id], map: "fk_foto_tipo_sistemas1_idx")
}

model iluminacao {
  id           Int        @unique(map: "id_UNIQUE") @default(autoincrement())
  quantidade   Float      @db.Float
  data_criacao DateTime?  @db.Timestamp(0)
  luminaria_id Int
  edificio     edificio[]
  espaco       espaco[]
  luminaria    luminaria  @relation(fields: [luminaria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_iluminacao_luminaria1")

  @@id([id, luminaria_id])
  @@index([luminaria_id], map: "fk_iluminacao_luminaria1_idx")
}

model luminaria {
  id                 Int             @unique(map: "id_UNIQUE") @default(autoincrement())
  ref_luminaria      String          @unique(map: "ref_luminaria_UNIQUE") @db.VarChar(45)
  tipo_iluminacao_id Int
  potencia_lampada   Float?          @db.Float
  quant_lampadas     Int?
  foto_id            Int
  iluminacao         iluminacao[]
  foto               foto            @relation(fields: [foto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_luminaria_foto1")
  tipo_iluminacao    tipo_iluminacao @relation(fields: [tipo_iluminacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_luminaria_tipo_iluminacao1")

  @@id([id, tipo_iluminacao_id, foto_id])
  @@index([foto_id], map: "fk_luminaria_foto1_idx")
  @@index([tipo_iluminacao_id], map: "fk_luminaria_tipo_iluminacao1_idx")
}

model ocupacao {
  id          Int      @id @unique(map: "id_UNIQUE") @default(autoincrement())
  atividade   String?  @db.VarChar(255)
  perfil_ocup String?  @db.VarChar(255)
  espaco      espaco[]
}

model piso {
  id          Int          @unique(map: "id_UNIQUE") @default(autoincrement())
  nome        String?      @db.VarChar(45)
  edificio_id Int
  elevadores  elevadores[]
  espaco      espaco[]
  edificio    edificio     @relation(fields: [edificio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_pisos_edificios1")

  @@id([id, edificio_id])
  @@index([edificio_id], map: "fk_pisos_edificios1_idx")
}

model proposta {
  id           String     @unique(map: "id_UNIQUE") @db.VarChar(10)
  user_id      Int
  data_criacao DateTime?  @db.Timestamp(0)
  edificio     edificio[]
  user         user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_proposta_user1")

  @@id([id, user_id])
  @@index([user_id], map: "fk_proposta_user1_idx")
}

model session {
  id            Int       @unique(map: "id_UNIQUE") @default(autoincrement())
  session_token String?   @db.VarChar(45)
  user_id       Int
  expires       DateTime? @db.Timestamp(0)
  user          user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_Session_user")

  @@id([id, user_id])
  @@index([user_id], map: "fk_Session_user_idx")
}

model sistemas {
  id               Int           @unique(map: "id_UNIQUE") @default(autoincrement())
  quant_sistemas   Int
  tipo_sistemas_id Int
  data_criacao     DateTime?     @db.Timestamp(0)
  espaco           espaco[]
  tipo_sistemas    tipo_sistemas @relation(fields: [tipo_sistemas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_sistemas_tipo_sistemas1")

  @@id([id, tipo_sistemas_id])
  @@index([tipo_sistemas_id], map: "fk_sistemas_tipo_sistemas1_idx")
}

model tipo_envidracados {
  id                   Int            @unique(map: "id_UNIQUE") @default(autoincrement())
  ref_vao              String         @unique(map: "ref_vao_UNIQUE") @db.VarChar(45)
  tipo_vao             String         @db.VarChar(255)
  tipo_caixilharia     String         @db.VarChar(255)
  tipo_vidro           String         @db.VarChar(255)
  med_vidro            String?        @db.VarChar(255)
  tipo_envidracadoscol String?        @db.VarChar(45)
  foto_med             String?        @db.Text
  protecoes_id         Int
  foto_id              Int
  envidracados         envidracados[]
  foto                 foto           @relation(fields: [foto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_envidracados_foto1")
  tipo_protecoes       tipo_protecoes @relation(fields: [protecoes_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_envidracados_protecoes1")

  @@id([id, protecoes_id, foto_id])
  @@index([foto_id], map: "fk_tipo_envidracados_foto1_idx")
  @@index([protecoes_id], map: "fk_tipo_envidracados_protecoes1_idx")
}

model tipo_iluminacao {
  id        Int         @id @unique(map: "id_UNIQUE") @default(autoincrement())
  tipo      String?     @db.VarChar(255)
  luminaria luminaria[]
}

model tipo_protecoes {
  id                  Int                 @id @unique(map: "id_UNIQUE") @default(autoincrement())
  protecao_interior   String?             @db.VarChar(255)
  protecao_exterior   String?             @db.VarChar(255)
  protecao_intermedia String?             @db.VarChar(255)
  tipo_envidracados   tipo_envidracados[]
}

model tipo_sistemas {
  id            Int        @id @unique(map: "id_UNIQUE") @default(autoincrement())
  ref_sistema   String     @unique(map: "ref_sistema_UNIQUE") @db.VarChar(45)
  nome          String?    @db.VarChar(255)
  tipo          String?    @db.VarChar(255)
  fonte_energia String     @db.VarChar(255)
  marca         String?    @db.VarChar(255)
  modelo        String?    @db.VarChar(255)
  funcao        String     @db.VarChar(45)
  foto          foto[]
  sistemas      sistemas[]
}

model user {
  id             Int        @id @unique(map: "id_UNIQUE") @default(autoincrement())
  name           String?    @db.VarChar(255)
  email          String?    @unique(map: "email_UNIQUE") @db.VarChar(255)
  email_verified DateTime?  @db.Timestamp(0)
  image          String?    @db.Text
  password       String?    @db.VarChar(200)
  account        account[]
  proposta       proposta[]
  session        session[]
}
